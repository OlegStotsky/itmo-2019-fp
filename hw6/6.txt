1)natToInteger6, так как, во первых, он является хвосто-рекурсивным, и поэтому не вызовет переполнение стека. 
  Так же, он форсирует на каждом шаге вычисление аккамулятора, и поэтому не вызывает утечек памяти.
  natToInteger не является хвосторекурсивной. natToInteger' не форсирует вычисление аккумулятора, поэтому проивзодит утечку памяти.
  natToInteger'' тоже подходит, так как форсирует вычисление последнего аргумента, который паттерн-матчится на каждом шаге, и в нем содержится аккумулятор.
  natToInteger''' не подходит, так как накапливает цепочку seq, которая не форсится, так как мы не патерн матчим по этому аргументу.
  natToInteger4, natToInteger5 тоже подходят.

2)integerToNat', так как хвосто-рекурсивная, и форсирует на каждом шаге вычисление аккумулятора. Не integerToNat’',
 так как n содержит конструктор данных, и форсировать его бесполезно, 
 так как seq форсирует  до head normal form, в которой n уже находится. Не integerToNat так как не хвосто-рекурсивная.

3)evensAndOdds, так как evensAndOdds содержит ленивое связывание, без которого здесь будет происходить форсирование головы списка на каждом этапе, что не позволит нам работать с бесконечными списками.
Не evensAndOdds'' так как он содержит форсирование аргумента, уже находящегося в head normal form.